# <services>
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: "${PROJECT_NAME}_nginx-proxy"
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d
    labels:
      com.github.nginx-proxy.nginx: "true"

  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: "${PROJECT_NAME}_nginx-proxy-acme"
    depends_on:
      - nginx-proxy
    restart: always
    environment:
      DEFAULT_EMAIL: ${EMAIL}
      NGINX_PROXY_CONTAINER: nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d

  
  backend:
    build: ./backend
    container_name: "${PROJECT_NAME}_backend"
    command: "gunicorn backend.wsgi:application --bind 0.0.0.0:${BACKEND_PORT}"
    environment:
      VIRTUAL_HOST: ${DOMAIN}
      VIRTUAL_PORT: ${BACKEND_PORT} 
      LETSENCRYPT_HOST: ${DOMAIN}
      LETSENCRYPT_EMAIL: ${EMAIL}
    env_file:
      - .env.prod
    depends_on:
      - postgres
    restart: always

  postgres:
    image: postgres:15
    container_name: "${PROJECT_NAME}_postgres"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.prod
    restart: always  

  frontend:
    build:
      context: ./frontend
    container_name: "${PROJECT_NAME}_frontend"
    expose:
      - "80"
    environment:
      VIRTUAL_HOST: ${DOMAIN}
      LETSENCRYPT_HOST: ${DOMAIN}
      LETSENCRYPT_EMAIL: ${EMAIL}
    depends_on:
      - backend
    restart: always

# </services>

# <volumes>
volumes:
  postgres_data:

# </volumes>
